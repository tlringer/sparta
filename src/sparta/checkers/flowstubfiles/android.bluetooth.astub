package android.bluetooth;

class BluetoothAdapter {

        static final @Sink(ANY) String ACTION_DISCOVERY_STARTED;
        static final @Sink(ANY)String ACTION_REQUEST_ENABLE;
        static final @Sink(ANY)String ACTION_STATE_CHANGED;
        static final int STATE_ON;
        static final @Sink(ANY)String EXTRA_STATE;
        static final int STATE_OFF;
        static final int STATE_TURNING_ON;
        static final @Sink(ANY)String ACTION_DISCOVERY_FINISHED;
        static final int STATE_TURNING_OFF;

        static BluetoothAdapter getDefaultAdapter();
        @Source(BLUETOOTH_ADMIN) boolean enable();
        @Source(BLUETOOTH_ADMIN) boolean disable();
        @Source(BLUETOOTH_ADMIN) boolean cancelDiscovery();
        @Source(BLUETOOTH) boolean isEnabled();
        @Source(BLUETOOTH_ADMIN) boolean startDiscovery();
        @Source(BLUETOOTH_ADMIN) boolean isDiscovering();
        @Source(BLUETOOTH_ADMIN) Set<BluetoothDevice> getBondedDevices();
        @Source(BLUETOOTH) BluetoothDevice getRemoteDevice(String address);

}

class BluetoothDevice {

        static final int BOND_NONE;
        static final String ACTION_BOND_STATE_CHANGED;
        static final int BOND_BONDED;
        static final String ACTION_FOUND;
        static final String EXTRA_DEVICE;
        static final String EXTRA_BOND_STATE;
        // static final @Sink(INTENT) String EXTRA_BOND_STATE;
        // static final @Sink(INTENT) String ACTION_FOUND;
        // static final @Sink(INTENT) String EXTRA_DEVICE;
        // static final @Sink(INTENT) String ACTION_BOND_STATE_CHANGED;

  @Source(BLUETOOTH) String getAddress();
    @Source(BLUETOOTH) BluetoothClass getBluetoothClass();
    @Source(BLUETOOTH) int describeContents();
    void writeToParcel(@Sink(BLUETOOTH) Parcel out, int flags);
    BluetoothSocket createRfcommSocketToServiceRecord(UUID uuid) throws IOException;
    @Source(BLUETOOTH) int getBondState();
    @Source(BLUETOOTH) String toString();
    @Source(BLUETOOTH) String getName();
}

class BluetoothSocket{
        @Source(BLUETOOTH) InputStream getInputStream() throws IOException;
        @Source(BLUETOOTH) OutputStream getOutputStream() throws IOException;
        void close() throws IOException;
        void connect() throws IOException;
}

class BluetoothClass {
  String toString();
  int getDeviceClass();
  int getMajorDeviceClass();
}
